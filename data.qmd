---
title: Data
description: We describe the sources of our data and the cleaning process.
toc: true
draft: false
editor: 
  markdown: 
    wrap: sentence
---

![](images/Commencement2024 (1).jpg)

## Datasources

### Dataset 1: Massachusetts District Data

#### Source 
[Link to dataset](https://profiles.doe.mass.edu/statereport/)

This dataset, provided by the Massachusetts Department of Education and Secondary Education, offers comprehensive, state-level education statistics. It includes data on student enrollment, academic performance, graduation rates, and demographics of the student body. It offers district-level information spanning 18 years (2006–2023). The data was compiled to guide educational improvement and support policies and programs. To ensure consistency across this panel, we standardized district names and aligned year columns before merging graduation data with enrollment figures for each year. Additionally, SAT performance data was incorporated by matching district and year, with SAT scores appended only where districts already existed in the core panel. Empty cells were replaced with the placeholder “nil” to maintain clarity during downstream processing.

#### Layout 

The main variables focused on in this dataset were demographics of the student body. In total, there are 24 unique variables, of which 7 are very influential to our research.

- **Year**: Year 
- **District Name**: Name of each school district
- **Percent_Graduated**: Graduation rates for the given school district in each year
- **2 Main Race variables**: 
  - **Percent_Black**: Percentage of the student body that identifies as being Black
  - **Percent_White**: Percentage of the student body that identifies as being White
- **SAT_Reading_Writing_Mean_Score**: Average Reading and Writing SAT score for the school district in a given year
- **SAT_Math_Mean_Score**: Average Math SAT score for the school district in a given year
- **Low_Income_Percent**: Indicates the proportion of students enrolled who come from economically disadvantaged backgrounds, based on state or federal criteria.

#### Cleaning Process

[Cleaning Script](/scripts/dataset1_clean_data.R)

The code executes the following operations: 

1. Loads the data from `final_merged_no_charter.csv` located in the dataset directory.
2. Removes all Technical, Vocational, Agricultural, and Virtual schools from the dataset.
3. Changes 'nil' values to 0.
4. Rearranges the dataset to list schools by district alphabetically and by year.
5. Recodes the variable names to be easier to understand and work with.
6. Saves the cleaned dataset to `massachusetts_district_data.rds` in the dataset directory.

Some things to note: All charter, technical, vocational, agricultural, and virtual schools were removed from the dataset. When combining this dataset with another, it felt prudent to remove charter schools, as people from outside the school district can attend these schools. Likewise, other school types that weren't strictly public were removed to make the combination process more efficient.

#### Dataset Visualizations



```{r echo=FALSE, message=FALSE, warning=FALSE}
library(tidyverse)

district_data <- read_rds(here::here("dataset","massachusetts_district_data.rds")) |>
  filter(`District Name` == "hampden-wilbraham")

ggplot(district_data, aes(x = `Year`, y = `Percent_Graduated`, fill = `Percent_Graduated`)) +
  geom_bar(stat = "identity", width = 0.5, na.rm = TRUE) +  
  labs(title = "Graduation Percentage in Hampden-Wilbraham", 
       x = "Year", 
       y = "Graduation Percentage") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```


```{r echo=FALSE, message=FALSE, warning=FALSE}
library(tidyverse)

race_distribution <- read_rds(here::here("dataset","massachusetts_district_data.rds")) |>
  filter(Year == 2022) |>
  mutate(across(starts_with("Percent_"), ~as.numeric(ifelse(. == "nill", NA, .)))) |>
  summarize(
    American_Indian = mean(Percent_American_Indian, na.rm = TRUE),
    Asian = mean(Percent_Asian, na.rm = TRUE),
    Black = mean(Percent_Black, na.rm = TRUE),
    Hispanic = mean(Percent_Hispanic, na.rm = TRUE),
    Multi_Race = mean(Percent_Multi_Race, na.rm = TRUE),
    Pacific_Islander = mean(Percent_Pacific_Islander, na.rm = TRUE),
    White = mean(Percent_White, na.rm = TRUE)
  ) |>
  pivot_longer(cols = everything(), names_to = "Race", values_to = "Percent")

ggplot(race_distribution, aes(x = "", y = Percent, fill = Race)) +
  geom_col(width = 1) +
  coord_polar("y") +
  labs(title = "Race Distribution in Massachusetts (2022)") +
  theme_void() +
  theme(legend.position = "right")

```


```{r echo=FALSE, message=FALSE, warning=FALSE}
library(tidyverse)

sex_distribution <- read_rds(here::here("dataset","massachusetts_district_data.rds")) |>
  filter(Year == 2022) |>
  mutate(across(starts_with("Percent_"), ~as.numeric(ifelse(. == "nill", NA, .)))) |>
  summarize(
    Female = mean(Percent_Female, na.rm = TRUE),
    Male = mean(Percent_Male, na.rm = TRUE)
  ) |>
  pivot_longer(cols = everything(), names_to = "Sex", values_to = "Percent")

ggplot(sex_distribution, aes(x = "", y = Percent, fill = Sex)) +
  geom_col(width = 1) +
  coord_polar("y") +
  labs(title = "Sex Distribution in Massachusetts (2022)") +
  theme_void() +
  theme(legend.position = "right")

```

```{r echo=FALSE, message=FALSE, warning=FALSE}
library(tidyverse)

massachusetts_district_data <- read_rds(here::here("dataset", "massachusetts_district_data.rds"))

sat_scores_2022 <- massachusetts_district_data |>
  filter(Year == 2022) |>
  select(`District Name`, SAT_Math_Mean_Score) |>
  drop_na(SAT_Math_Mean_Score) |>
  filter(SAT_Math_Mean_Score != 0) |>
  mutate(SAT_Math_Mean_Score = as.numeric(SAT_Math_Mean_Score),
         `District Name` = factor(`District Name`))

ggplot(sat_scores_2022, aes(x = `District Name`, y = SAT_Math_Mean_Score)) +
  geom_line(group = 1, color = "blue") + 
  geom_point(color = "red") + 
  labs(title = "SAT Math Scores for Massachusetts in 2022",
       x = "District",
       y = "Mean SAT Math Score") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 3),  
        axis.text.y = element_text(size = 12),  
        axis.title.x = element_text(size = 12), 
        axis.title.y = element_text(size = 12)) +
  scale_y_continuous(labels = function(x) format(x, big.mark = ","))





```

```{r echo=FALSE, message=FALSE, warning=FALSE}
library(tidyverse)

statewide_trend <- read_rds(here::here("dataset","massachusetts_district_data.rds")) |>
  mutate(Low_Income_Percent = as.numeric(ifelse(Low_Income_Percent == "nill", NA, Low_Income_Percent))) |>
  group_by(Year)|>
  summarize(State_Avg_Low_Income = mean(Low_Income_Percent, na.rm = TRUE))

ggplot(statewide_trend, aes(x = factor(Year), y = State_Avg_Low_Income)) +
  geom_point(size = 3, color = "darkred") +
  labs(
    title = "Statewide Low Income % – Dot Plot by Year",
    x = "Year",
    y = "Low Income (%)"
  ) +
  theme_minimal()

```

### Dataset 2: Massachusetts Per Pupil Expenditure

#### Source
[Link to dataset](https://profiles.doe.mass.edu/statereport/ppx.aspx)

This dataset is also provided by the Massachusetts Department of Education and Secondary Education. It provides data and analysis related to per-pupil expenditures, the amount of money spent per student, across school districts in Massachusetts. Per-pupil expenditures are calculated by dividing a district's operating costs by its average pupil membership (FTEs), including in-district expenditures per pupil and total expenditures per pupil, which include in-district and out-of-district spending and enrollment. This data helps policymakers, educators, and the public compare spending patterns and evaluate how educational funds are allocated and used across the state.

#### Layout

This data set contains 9 variables, of which 4 are influential to our study.

- **Year**: Year
- **District Name**: Name of each school district
- **Total_Expenditures**: Total expenditures for each school district per year
- **Total_Expenditures_Per_Pupil**: Total expenditures per student for each school district per year. 

#### Cleaning Process

[Cleaning Script](/scripts/dataset2_clean_data.R)

The code executes the following operations: 

1. Set up and locate files in the dataset directory, filters to include only files with names like `PerPupilExpenditures_YYYY.rds`.
2. Makes the first row the column names, then drops the first row.
3. Filters out Charter, Vocational, and Technical schools as well as state totals.
4. Ensures a consistent layout for the year.
5. Renames columns for consistency with dataset 1.
6. Saves the cleaned dataset to `PerPupilExpenditures_combined_filtered.rds` in the dataset directory. 

One thing to note is the datasets were individual per year and had to be combined into one larger dataset that had all years instead of being separate.

#### Dataset Visualizations


```{r echo=FALSE, message=FALSE, warning=FALSE}
library(tidyverse)

data <- readRDS(here::here("dataset", "PerPupilExpenditures_combined_filtered.rds"))
cols_to_clean <- c("In_District_Expenditures", 
                   "In_District_Expenditures_Per_Pupil", 
                   "Total_Expenditures", 
                   "Total_Expenditures_Per_Pupil")

data <- data |>
  mutate(across(all_of(cols_to_clean), ~ as.numeric(gsub("[^0-9.]", "", .))))

data |>
  group_by(Year) |>
  summarise(avg_in_district_exp = mean(In_District_Expenditures, na.rm = TRUE)) |>
  ggplot(aes(x = Year, y = avg_in_district_exp)) +
  geom_line() +
  geom_point() +
  scale_y_continuous(labels = function(x) paste0("$", format(x, big.mark = ",", scientific = FALSE))) +
  labs(title = "Average In-District Expenditures Over Time",
       y = "Avg In-District Expenditures",
       x = "Year")

data |>
  group_by(Year) |>
  summarise(avg_exp_per_pupil = mean(In_District_Expenditures_Per_Pupil, na.rm = TRUE)) |>
  ggplot(aes(x = Year, y = avg_exp_per_pupil)) +
  geom_line(color = "darkgreen") +
  geom_point() +
  scale_y_continuous(labels = function(x) paste0("$", format(x, big.mark = ",", scientific = FALSE))) +
  labs(title = "Average In-District Expenditures Per Pupil Over Time",
       y = "Expenditures Per Pupil",
       x = "Year")


latest_year <- max(data$Year, na.rm = TRUE)

data |>
  filter(Year == latest_year) |> 
  top_n(5, Total_Expenditures) |>
  ggplot(aes(x = reorder(`District Name`, Total_Expenditures), y = Total_Expenditures)) +
  geom_col(fill = "steelblue") +
  coord_flip() +
  scale_y_continuous(labels = function(x) paste0("$", format(x, big.mark = ",", scientific = FALSE))) +
  labs(title = paste("Top 5 Districts by Total Expenditures in", latest_year),
       x = "District Name",
       y = "Total Expenditures")

```


### Merged Dataset

The merged dataset combines all variables from `massachusetts_district_data.rds` and `PerPupilExpenditures_combined_filtered.rds`. 

#### Merging the data

[Merging Script](/scripts/dataset_combined_clean_data.R)

The code executes the following operations: 

1. Loads the datasets `massachusetts_district_data.rds` and `PerPupilExpenditures_combined_filtered.rds` from the dataset directory.
2. Cleans data in `massachusetts_district_data.rds`. Converts the "District Name" column to lowercase (tolower()) to ensure uniformity in case sensitivity. Converts the "Year" column to an integer (as.integer()) to make sure it’s in a proper numeric format for analysis.
3. Cleans the `PerPupilExpenditures_combined_filtered.rds` to convert "District Name" to lowercase and "Year" to be an integer.
4. Deletes one of the District Code columns. 
5. Merges the datasets and saves them to the dataset directory.

#### Data Visualizations


```{r echo=FALSE, message=FALSE, warning=FALSE}
library(tidyverse)

combined_data <- readRDS(here::here("dataset", "Combined_District_Data.rds"))

ggplot(combined_data, aes(x = Total_Expenditures_Per_Pupil, y = Percent_Graduated)) +
  geom_point(alpha = 0.6) +
  geom_smooth(method = "lm", se = FALSE, color = "blue") +
  labs(
    title = "Graduation Rate vs. Total Expenditures Per Pupil",
    x = "Total Expenditures Per Pupil ($)",
    y = "Percent Graduated"
  ) +
  scale_x_continuous(labels = function(x) paste0("$", format(x, big.mark = ","))) +
  theme_minimal()

ggplot(combined_data, aes(x = Total_Expenditures_Per_Pupil, y = Percent_Black)) +
  geom_point(alpha = 0.6) +
  geom_smooth(method = "lm", se = FALSE, color = "blue") +
  labs(
    title = "Percent Black Students vs. Total Expenditures Per Pupil",
    x = "Total Expenditures Per Pupil ($)",
    y = "Percent Black Students"
  ) +
  scale_x_continuous(labels = function(x) paste0("$", format(x, big.mark = ","))) +
  theme_minimal()

ggplot(combined_data, aes(x = In_District_Expenditures, y = Low_Income_Percent)) +
  geom_point(alpha = 0.6) +
  geom_smooth(method = "lm", se = FALSE, color = "blue") +
  labs(
    title = "Percent Low-Income Students vs. In-District Expenditures",
    x = "In-District Expenditures ($)",
    y = "Percent Low-Income Students"
  ) +
  scale_x_continuous(labels = function(x) format(x, big.mark = ",", scientific = FALSE)) +
  theme_minimal()

```


### Additional Libraries used for Analysis

1. kableExtra: Enhances knitr’s kable() function, allowing for the creation of complex tables to present regression model summaries.
2. broom: Converts statistical model objects into tidy data frames, making it easier to summarize, visualize, and report model results using the tidyverse workflow.
